:root {
    /* Light Mode Colors */
    --background-light: #f4f6f9;
    --background-element-light: #ffffff;
    --text-primary-light: #202124;
    --text-secondary-light: #5f6368;
    --primary-light: #3367D6;
    --primary-hover-light: #2a5ad4;
    --border-light: #dadce0;
    
    /* Dark Mode Colors */
    --background-dark: #121212;
    --background-element-dark: #1e1e1e;
    --text-primary-dark: #ffffff;
    --text-secondary-dark: #b0b0b0;
    --primary-dark: #6fa6d6;
    --primary-hover-dark: #8ab4f8;
    --border-dark: #333333;

    /* Default to Light Mode */
    --background: var(--background-light);
    --background-element: var(--background-element-light);
    --text-primary: var(--text-primary-light);
    --text-secondary: var(--text-secondary-light);
    --primary: var(--primary-light);
    --primary-hover: var(--primary-hover-light);
    --border: var(--border-light);
}

/* Dark Mode */
html.dark-mode {
    --background: var(--background-dark);
    --background-element: var(--background-element-dark);
    --text-primary: var(--text-primary-dark);
    --text-secondary: var(--text-secondary-dark);
    --primary: var(--primary-dark);
    --primary-hover: var(--primary-hover-dark);
    --border: var(--border-dark);
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    transition: background-color 0.3s, color 0.3s;
}

body {
    font-family: 'Arial', 'Google Sans', sans-serif;
    background-color: var(--background);
    color: var(--text-primary);
    line-height: 1.6;
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 20px;
}

.cipher-container {
    background-color: var(--background-element);
    border-radius: 12px;
    box-shadow: 0 4px 20px rgba(0,0,0,0.1);
    width: 100%;
    max-width: 600px;
    padding: 30px;
}

.mode-toggle {
    position: absolute;
    top: 20px;
    right: 20px;
    background: none;
    border: none;
    cursor: pointer;
    font-size: 24px;
    color: var(--text-secondary);
    transform: rotate(-30deg);
    transition: transform 0.3s ease-in-out, color 0.3s ease-in-out;
}

.mode-toggle.rotated {
    transform: rotate(150deg);
}

.cipher-header {
    text-align: center;
    margin-bottom: 30px;
}

.cipher-selector {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    justify-content: center;
    margin-bottom: 30px;
}

.cipher-selector button {
    background-color: var(--background);
    color: var(--text-secondary);
    border: 1px solid var(--border);
    padding: 10px 16px;
    border-radius: 6px;
    cursor: pointer;
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    transition: all 0.3s ease;
}

.cipher-selector button:hover {
    background-color: var(--primary);
    color: white;
}

.cipher-selector button.active {
    background-color: var(--primary);
    color: white;
    box-shadow: 0 2px 5px rgba(0,0,0,0.2);
}

.cipher-input {
    display: flex;
    flex-direction: column;
    gap: 15px;
}

.cipher-input input, 
.cipher-input textarea {
    width: 100%;
    padding: 12px 15px;
    border: 1px solid var(--border);
    border-radius: 6px;
    background-color: var(--background);
    color: var(--text-primary);
    font-size: 16px;
    resize: none;
}

.cipher-actions {
    display: flex;
    gap: 15px;
    margin-top: 20px;
}

.cipher-actions button {
    flex: 1;
    padding: 12px 20px;
    background-color: var(--primary);
    color: white;
    border: none;
    border-radius: 6px;
    cursor: pointer;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    transition: background-color 0.3s ease;
}

.cipher-actions button:hover {
    background-color: var(--primary-hover);
}

.cipher-output {
    margin-top: 20px;
    background-color: var(--background);
    padding: 15px;
    border-radius: 6px;
    border: 1px solid var(--border);
    min-height: 100px;
}

@media screen and (max-width: 600px) {
    body {
        padding: 10px;
    }

    .cipher-container {
        width: 100%;
        padding: 20px;
    }

    .cipher-selector {
        flex-direction: column;
    }

    .cipher-selector button {
        width: 100%;
    }

    .cipher-actions {
        flex-direction: column;
    }

    .mode-toggle {
        position: fixed;
        top: 10px;
        right: 10px;
    }
}

/* Responsive Typography */
@media screen and (max-width: 400px) {
    .cipher-container {
        font-size: 14px;
    }

    .cipher-selector button {
        padding: 8px 12px;
    }
}

.keys-container {
    display: flex;
    gap: 15px;
    flex-wrap: wrap; /* Ensures responsiveness */
}

.keys-container input {
    flex: 1; /* Allow inputs to take equal space */
    min-width: 45%; /* Maintain good appearance on small screens */
}

.double-columnar-keys {
    display: none;
    flex-direction: column;
    gap: 15px;
    margin-top: 15px;
}

.double-columnar-keys.active {
    display: flex;
}


/* RESET STYLE */

.reset-button {
    padding: 12px 20px;
    background-color: #f44336; /* Red color */
    color: white;
    border: none;
    border-radius: 6px;
    cursor: pointer;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    font-weight: bold;
    transition: background-color 0.3s ease;
    position: fixed;
    bottom: 20px; /* Distance from the bottom of the screen */
    right: 20px;  /* Distance from the right edge of the screen */
    z-index: 1000; /* Ensure it is above other content */
}

.reset-button:hover {
    background-color: #d32f2f;
}




/* ALL ANIMATION */
/* Add keyframes for fade-in */
@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(10px); /* Slight downward offset */
    }
    to {
        opacity: 1;
        transform: translateY(0); /* Original position */
    }
}

/* Apply the animation to the container */
.cipher-container {
    animation: fadeIn 0.8s ease-out; /* Duration and easing */
    opacity: 0; /* Initial state */
}

.cipher-selector button,
.cipher-input input,
.cipher-actions button {
    animation: fadeIn 0.6s ease-out;
    animation-delay: 0.2s; /* Stagger the animation */
    animation-fill-mode: backwards; /* Ensure delay starts from invisible state */
}


.cipher-output h3, .cipher-output p {
    margin-top: -5px;
}

.cipher-output {
    margin-top: 20px;
    background-color: var(--background);
    padding: 15px;
    border-radius: 6px;
    border: 1px solid var(--border);
    position: relative; /* Needed for positioning child elements */
    min-height: 100px;
    padding-top: 40px; /* Add padding to prevent overlapping with the button */
}

.cipher-output .show-solution-btn {
    opacity: .7;
    color: var(--text-secondary-light);
    position: absolute; /* Position the button inside the .cipher-output container */
    top: 10px; /* Distance from the top of the .cipher-output */
    right:  10px; /* Distance from the right of the .cipher-output */
    background-color: var(--border);
    border: none;
    border-radius: 6px;
    cursor: pointer;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    padding: 8px 12px;
    font-size: 14px;
    transition: background-color 0.3s ease;
}

.cipher-output .show-solution-btn:hover {
    background-color: var(--background-element);
}



/* Modal Background */
.solution-modal {
    display: flex;
    justify-content: center;
    align-items: center;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
    backdrop-filter: blur(2px); /* Adds the blur effect to the background */
    z-index: 1000;
}

/* Modal Content */
.solution-modal .modal-content {
    background-color: var(--background-element);
    color: var(--text-primary);
    border-radius: 8px;
    padding: 20px;
    width: 90%;
    max-width: 600px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
    position: relative;
    animation: fadeIn 0.3s ease-in-out;
    transform: none; /* Ensures no scaling issue */
    margin: 7% auto; /* Centers the modal horizontally */
}

/* Modal Header */
.solution-modal .modal-content h3 {
    font-size: 1.5rem;
    margin-bottom: 15px;
    color: var(--text-primary);
    text-align: center;
}

/* Steps Container */
.solution-modal .modal-content #modal-steps-container {
    max-height: 300px;
    overflow-y: auto;
    padding: 10px;
    background-color: var(--background);
    border: 1px solid var(--border);
    border-radius: 6px;
    margin-bottom: 15px;
    color: var(--text-secondary);
    font-size: 0.95rem;
    line-height: 1.6;
    scrollbar-width: thin; /* For Firefox */
    scrollbar-color: var(--primary) var(--background-element); /* For Firefox */
}

/* Custom Scrollbar (Webkit Browsers) */
.solution-modal .modal-content #modal-steps-container::-webkit-scrollbar {
    width: 8px;
}

.solution-modal .modal-content #modal-steps-container::-webkit-scrollbar-track {
    background: var(--background-element);
    border-radius: 6px;
}

.solution-modal .modal-content #modal-steps-container::-webkit-scrollbar-thumb {
    background: var(--primary);
    border-radius: 6px;
    border: 2px solid var(--background-element);
}

.solution-modal .modal-content #modal-steps-container::-webkit-scrollbar-thumb:hover {
    background: var(--primary-hover);
}

/* Close Button */
.solution-modal .close-btn {
    position: absolute;
    top: 10px;
    right: 15px;
    font-size: 1.5rem;
    color: var(--primary);
    cursor: pointer;
    transition: color 0.3s ease;
}

.solution-modal .close-btn:hover {
    color: var(--primary-hover);
}

/* Close Button (on Modal) */
.modal-close-btn {
    background-color: var(--primary);
    color: white;
    border: none;
    padding: 10px 20px;
    font-size: 1rem;
    border-radius: 6px;
    cursor: pointer;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    display: block;
    margin: 0 auto;
    transition: background-color 0.3s ease;
}

.modal-close-btn:hover {
    background-color: var(--primary-hover);
}

/* Animations */
@keyframes fadeIn {
    from {
        opacity: 0;
        transform: scale(0.9);
    }
    to {
        opacity: 1;
        transform: scale(1);
 
    }
}


/* COPY DESIGN */
.copy-btn {
    position: absolute;
    top: 5px;
    left: 7px;
    padding: 3px 8px;
    background-color: var(--border);
    border: 1px solid var(--border);
    color: var(--text-secondary-light);
    cursor: pointer;
    border-radius: 10px;
    transition: background-color 0.3s ease, color 0.3s ease;
    opacity: .8;
}

.copy-btn:hover {
    background-color: var(--text-secondary-dark);
}

.copy-btn:active {
    transform: scale(0.98);
}


/* COPY MESSAGE ANIMATION */
.copy-notification {
    position: fixed;
    bottom: 20px;
    left: 20px;
    padding: 10px 20px;
    border-radius: 5px;
    font-size: 16px;
    display: none; /* Initially hidden */
    opacity: 0;
    z-index: 1000;
    transition: opacity 0.5s ease;
}

/* Success Notification */
.copy-notification.success {
    background-color: var(--border); /* Primary color for success */
    color: var(--text-primary); /* Light mode text color */
}

/* Error Notification (Nothing to Copy) */
.copy-notification.error {
    background-color: rgb(255, 97, 97); /* Red background for error */
    color: var(--text-primary-dark); /* Text color for light mode */
}

/* Show notification */
.copy-notification.show {
    display: block;
    opacity: 1;
    animation: fadeInOut 3s forwards;
}

/* Fade in and fade out animation */
@keyframes fadeInOut {
    0% {
        opacity: 0;
    }
    20% {
        opacity: 1;
    }
    80% {
        opacity: 1;
    }
    100% {
        opacity: 0;
    }
}



html.dark-mode .copy-notification.error {
    background-color: rgb(255, 76, 76); /* Red background for error (same in both modes) */
    color: var(--text-primary-dark); /* Dark mode text color */
}






.message-container {
    position: fixed;
    bottom: 15px;    /* Position 20px from the bottom */
    left: 20px;      /* Position 20px from the left */
    z-index: 9999;
    max-width: 200px;
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: 10px;
}

/* General message styles */
.message {
    padding: 10px;
    margin: 5px 0;
    border-radius: 5px;
    font-size: 16px;
    color: #fff;
    opacity: 0;
    transform: translateY(20px);
    animation: showMessage 0.5s ease-out forwards;
}

/* Animation for showing the message */
@keyframes showMessage {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* Animation for hiding the message */
@keyframes hideMessage {
    from {
        opacity: 1;
        transform: translateY(0);
    }
    to {
        opacity: 0;
        transform: translateY(20px);
    }
}

/* Success message */
.message.success {
    background-color: #4CAF50;  /* Green */
}

/* Error message */
.message.error {
    background-color: #f44336;  /* Red */
}

/* Info message */
.message.info {
    background-color: #2196F3;  /* Blue */
}

/* Warning message */
.message.warning {
    background-color: #ff9800;  /* Orange */
}